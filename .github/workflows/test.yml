name: Test CI

on:
  push:
    branches: ['main']
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Run Tests (${{ matrix.config.name }})
    runs-on: ${{ matrix.config.os }}-${{ matrix.config.os-version }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Windows
            os: windows
            os-version: 2025
            test_type: auto

          - name: Linux (ARM64)
            os: ubuntu
            os-version: 24.04-arm
            arm: true
            test_type: auto

          - name: Linux (x86_64, GMP)
            os: ubuntu
            os-version: 24.04
            arm: false
            test_type: gmp
    
          - name: Linux (x86_64, Tommath)
            os: ubuntu
            os-version: 24.04
            arm: false
            test_type: tommath

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Setup MSVC (Windows)
        if: matrix.config.os == 'windows'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
          toolset: "14.44"

      - name: Setup Clang
        if: matrix.config.os == 'ubuntu'
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 21
          echo "CC=clang-21" >> "$GITHUB_ENV"
          echo "CXX=clang++-21" >> "$GITHUB_ENV"

      # NOTE: meson has no dependencies, so --break-system-packages doesn't really break anything!
      - name: Setup meson
        run: |
          pip install meson --break-system-packages

      - name: Install dependencies (Linux)
        if: matrix.config.os == 'ubuntu'
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build gcovr libgmp-dev cmake libtommath-dev -y --no-install-recommends

      - name: Install libtommath (Windows)
        if: matrix.config.os == 'windows'
        run: |
          git clone https://github.com/libtom/libtommath
          cd libtommath
          git checkout v1.3.0
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build .
          cmake -DCMAKE_BUILD_TYPE=Debug ..
          cmake --build .
          cmake --install .

      - name: Configure
        run: meson setup build -Dbuildtype=debug -Db_coverage=true -Ddefault_library=${{( matrix.config.os == 'windows') && 'static' ||'shared' }} -Dtests=${{ matrix.config.test_type}} --fatal-meson-warnings

      - name: Run tests
        run: meson test -C build --verbose

      - name: Generate Coverage File
        run: |
          ninja coverage -C build

      - name: Create Coverage Report
        if: matrix.config.os == 'ubuntu' && matrix.config.test_type == 'gmp'
        uses: insightsengineering/coverage-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ./build/meson-logs/coverage.xml
          threshold: 90.0 # 0-100
          fail: true
          coverage-reduction-failure: true
          # Publish the rendered output as a PR comment
          publish: true
          coverage-summary-title: 'Code Coverage Summary'
          togglable-report: true
          diff: true
          diff-branch: main

      - name: Upload test coverage artifacts
        if: matrix.config.os == 'ubuntu' && matrix.config.test_type == 'gmp'  
        uses: actions/upload-artifact@v4
        with:
          name: Tests coverage artifacts
          path: |
            ./build/meson-logs/coverage.xml
            ./build/meson-logs/coveragereport/
